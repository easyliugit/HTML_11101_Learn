2022/09/01
建立資料庫 以laravel_20220901 為例 ===========================================
1. 在.env 目錄下做與DB連線設定
DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=laravel_20220901
DB_USERNAME=root
DB_PASSWORD=
2.在Myadmin 建立 Laravel資料庫名稱laravel_20220901
提示命令字元 建立預設資鰾表
3.php artisan migrate

xampp mysql 障礙排除 ============================
xampp >mysql >data
data->data_20220901
new date
mysql -> backup 資料 -> copy 至 data
data_20220901->db folder 貼到新的data

查看Database: Migrations 文件=======================================
https://laravel.com/docs/8.x/migrations

提示命令字元 重建預設資料表=======================================
1.php artisan migrate:rollback
2.php artisan migrate

建立資料表 students ==========================================
https://laravel.com/docs/8.x/migrations#generating-migrations
提示命令字元 建立students
1.php artisan make:migration create_students_table
 查看migrations資料夾 2022_09_01_030341_create_students_table.php
至2014_10_12_000000_create_users_table.php function up()
2. 複製$table->string('name');
至2022_09_01_030341_create_students_table.php function up()
3.在$table->id(); 與$table->timestamps(); 之間
貼上4行$table->string('name');
4.其中3行修改 name>chinese、name>english、name>math
$table->string('name');
$table->string('chinese');
$table->string('english');
$table->string('math');
提示命令字元 後查看Myadmin
5.php artisan migrate

修改資料表 students ==========================================
https://laravel.com/docs/8.x/migrations#available-column-types
收回DB中的資料表
1.php artisan migrate:rollback
2.將型態修改
之前
$table->string('chinese');
$table->string('english');
$table->string('math');
之後
$table->integer('chinese');
$table->integer('english');
$table->integer('math');
提示命令字元 推至Myadmin
3.php artisan migrate

資料表 students 建立 修改 migrate:rollback

ORM 使用物件導向連接資料庫 ====================================
https://laravel.com/docs/8.x/eloquent#generating-model-classes
提示命令字元 建立Model
1.php artisan make:model Student
指向資料表名稱
https://laravel.com/docs/8.x/eloquent#table-names
app\Models\Student.php extends Model
2.protected $table = 'students';
https://laravel.com/docs/8.x/eloquent#retrieving-models
app\Http\Controllers\StudentController.php 最上面
3.use App\Models\Student;
app\Http\Controllers\StudentController.php function index()
4.
foreach (Student::all() as $student) {
    echo $student->name;
}
測試是否取得資料表資料
5.
$data=Student::all();
dd($data);
// foreach (Student::all() as $student) {
//    echo $student->name;
// }

將取得資料表資料 顯示在View上
app\Http\Controllers\StudentController.php function index()
1.
// dd($data);
return view('StudentController.index',["data"=>$data]);

resources\views\StudentController\index.blade.php
2.
        @foreach ($data as $item)
        <tr>
          <td>{{$item["id"]}}</td>
          <td>{{$item["name"]}}</td>
          <td>{{$item["chinese"]}}</td>
          <td>{{$item["english"]}}</td>
        </tr>
        @endforeach

ORM 使用物件導向連接資料庫 取得資料表資料 顯示在View上


新增資料 =====================================
建立view create.php
form 表單內加入@csrf
https://laravel.com/docs/8.x/eloquent#inserts

完成新增資料

完成更新版面資料


資料庫存取
建立resource-controllers 
首頁:1.index
新增:1.create 2.store
修改:1.edit 2.update
刪除:1.destrov

排序首頁資料表


// get => fetchAll 多筆資料
// first => fetch 單筆資料

https://laravel.com/docs/8.x/controllers#actions-handled-by-resource-controller

https://laravel.com/docs/8.x/eloquent#updates
在app\Http\Controllers\StudentController.php
function update(Request $request, $id)
1.
$data = Flight::find(1);
dd($data);
$data->name = 'Paris to London';

$data->save();
